apply plugin: 'com.android.library'

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 28)
    buildToolsVersion safeExtGet('buildToolsVersion', '28.0.3')

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 19)
        targetSdkVersion safeExtGet('targetSdkVersion', 28)
        versionCode 1
        versionName "1.0"

        missingDimensionStrategy 'shield-ep-api', rootProject.ext.shield_ep_api
    }
}

def exoplayerVersion = rootProject.ext.exoplayerVersion

dependencies {
    //noinspection GradleDynamicVersion
    implementation project(':ReactAndroid')

    implementation("com.github.DiceTechnology.doris-android:doris:$exodoris_version") {
        exclude group: "com.github.DiceTechnology", module: "dice-shield-android"
    }

    implementation("com.google.android.exoplayer:extension-mediasession:$exoplayerVersion") {
        exclude group: "com.google.android.exoplayer", module: "exoplayer-core"
    }

    // All support libs must use the same version
    implementation "androidx.annotation:annotation:1.0.0"
    implementation "androidx.appcompat:appcompat:1.0.0"
    implementation "androidx.media:media:1.0.0"

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation("com.google.android.exoplayer:extension-okhttp:$exoplayerVersion") {
        exclude group: "com.squareup.okhttp3", module: "okhttp"
        exclude group: "com.google.android.exoplayer", module: "exoplayer-core"
    }
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'

    implementation(project(':dice-shield-android')) {
        exclude group: "com.google.android.exoplayer", module: "exoplayer-core"
        exclude group: "com.google.android.exoplayer", module: "exoplayer-dash"
        exclude group: "com.google.android.exoplayer", module: "exoplayer-hls"
        exclude group: "com.google.android.exoplayer", module: "exoplayer-ui"
    }
}
